"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[732],{9613:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>d});var r=n(9496);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var m=r.createContext({}),p=function(e){var t=r.useContext(m),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},s=function(e){var t=p(e.components);return r.createElement(m.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,m=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=p(n),d=i,f=u["".concat(m,".").concat(d)]||u[d]||c[d]||a;return n?r.createElement(f,o(o({ref:t},s),{},{components:n})):r.createElement(f,o({ref:t},s))}));function d(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=u;var l={};for(var m in t)hasOwnProperty.call(t,m)&&(l[m]=t[m]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var p=2;p<a;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},9930:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>m,contentTitle:()=>o,default:()=>c,frontMatter:()=>a,metadata:()=>l,toc:()=>p});var r=n(2081),i=(n(9496),n(9613));const a={},o="time",l={unversionedId:"time/readme",id:"time/readme",title:"time",description:"patronum 1.7.0",source:"@site/../src/time/readme.md",sourceDirName:"time",slug:"/time/",permalink:"/methods/time/",draft:!1,editUrl:"https://github.com/effector/patronum/tree/main/src/../src/time/readme.md",tags:[],version:"current",frontMatter:{},sidebar:"methodsSidebar",previous:{title:"throttle",permalink:"/methods/throttle/"}},m={},p=[{value:"Motivation",id:"motivation",level:3},{value:"Formulae",id:"formulae",level:3},{value:"Arguments",id:"arguments",level:3},{value:"Returns",id:"returns",level:3},{value:"Example",id:"example",level:3}],s={toc:p};function c(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"time"},"time"),(0,i.kt)("admonition",{title:"since",type:"note"},(0,i.kt)("p",{parentName:"admonition"},"patronum 1.7.0")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"import { time } from 'patronum';\n// or\nimport { time } from 'patronum/time';\n")),(0,i.kt)("h3",{id:"motivation"},"Motivation"),(0,i.kt)("p",null,"The method allow to read current time just as an effector method."),(0,i.kt)("h3",{id:"formulae"},"Formulae"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"$time = time({ clock, getNow, initial });\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Initialize ",(0,i.kt)("inlineCode",{parentName:"li"},"$time")," with ",(0,i.kt)("inlineCode",{parentName:"li"},"initial"),", if not present call ",(0,i.kt)("inlineCode",{parentName:"li"},"getNow"),", if not present call ",(0,i.kt)("inlineCode",{parentName:"li"},"Date.now()")),(0,i.kt)("li",{parentName:"ul"},"When ",(0,i.kt)("inlineCode",{parentName:"li"},"clock")," is triggered, call ",(0,i.kt)("inlineCode",{parentName:"li"},"getNow")," to update ",(0,i.kt)("inlineCode",{parentName:"li"},"$time")," with results, if not present use ",(0,i.kt)("inlineCode",{parentName:"li"},"Date.now()"))),(0,i.kt)("h3",{id:"arguments"},"Arguments"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},"clock: Event<any> | Effect<any, any, any> | Store<any>")," \u2014 The unit triggers time reading and updates ",(0,i.kt)("inlineCode",{parentName:"li"},"$time")," store"),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},"getNow?: () => Time")," \u2014 A custom function to read time when ",(0,i.kt)("inlineCode",{parentName:"li"},"clock")," triggers. ",(0,i.kt)("strong",{parentName:"li"},"Must be synchronous"),"."),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},"initial?: Time")," \u2014 Initial state for ",(0,i.kt)("inlineCode",{parentName:"li"},"$time")," store. If not passed ",(0,i.kt)("inlineCode",{parentName:"li"},"getNow")," is called.")),(0,i.kt)("p",null,"\u2014 ",(0,i.kt)("inlineCode",{parentName:"p"},"Time")," is a generic type argument used for overriding time reader function. By default, is is ",(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("h3",{id:"returns"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"$time: Store<Time>")," \u2014 Store contains unix timestamp snapshot, updates when ",(0,i.kt)("inlineCode",{parentName:"p"},"clock")," triggers.\nIf ",(0,i.kt)("inlineCode",{parentName:"p"},"getNow")," is overrided, contains value this function returns.\nBy default, it is ",(0,i.kt)("inlineCode",{parentName:"p"},"number"),".\nInitialized with ",(0,i.kt)("inlineCode",{parentName:"p"},"initial"),", by default, it is ",(0,i.kt)("inlineCode",{parentName:"p"},"Date.now()")),(0,i.kt)("h3",{id:"example"},"Example"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"import { time } from 'patronum';\n\nconst tick = createEvent();\nconst $time = time({ clock: tick });\n\n$time.watch((time) => console.log('time', time));\n// => time 1660293358847\n\ntick();\n// => time 1660293358848\nawait new Promise((res) => setTimeout(res, 100));\ntick();\n// => 1660293358952\n")),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://share.effector.dev/VuhhzWKE"},"Try it")))}c.isMDXComponent=!0}}]);